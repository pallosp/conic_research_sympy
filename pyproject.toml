[tool.poetry]
name = "conic_research_sympy"
version = "0.0.1"
description = "Symbolic projective and Euclidean geometry toolkit"
authors = ["PÃ©ter Pallos <pallosp@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "lib", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.11,<4.0"
sympy = "1.14"

[tool.poetry.group.dev.dependencies]
pre-commit = "^4.3.0"
pydoc-markdown = "^4.8.2"
pytest = "^8.4.2"
pytest-cov = "^7.0.0"
ruff = "^0.14.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.ruff]
target-version = "py310"  # Enable type unions

[tool.ruff.lint]
select = [
  "ALL",
]
ignore = [
  "D100",  # Missing module docstring
  "D102",  # Missing method docstring
  "D103",  # Missing function docstring
  "D104",  # Missing package docstring
  "D203",  # Incorrect blank line before class
  "D205",  # Blank line required after summary line
  "D213",  # Multi-line docstring should start at the second line
  "D401",  # First line of docstring should be imperative
  "D415",  # Missing closing punctuation
  "EM101",  # Exception message should be a variable, not a raw string
  "ERA001",  # Commented-out code
  "N802",  # Function name should be lowercase
  "PLR0913",  # Too many arguments
  "PLR2004",  # Magic value used in comparison
  "RUF002",  # Ambiguous Unicode character in docstring
  "RUF003",  # Ambiguous Unicode character in comment
  "TRY003",  # Use Exception subclasses instead of messages
]

[tool.ruff.lint.per-file-ignores]
"src/research/*.py" = [
  "S101",  # Use of `assert` detected
  "T201",  # print statement
  "TID251",  # banned API (configured below)
]
"tests/*.py" = [
  "ANN201",  # Missing return type annotation
  "D101",  # Missing function docstring
  "S101",  # Use of `assert` detected
]

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"sympy.pprint".msg = "Do not use sympy.pprint outside src/research"
